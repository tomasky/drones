coms: &coms  export PATH=$PWD/nim/bin:$PATH && cd out && echo $CC && export biname=$(cat ../ver)


kind: pipeline
name: default
type: docker

clone: 
  disable: true
 
trigger:
  event:
    include:
      - push
      - tag
      - promote
 
image_pull_secrets:
- dockerconfig


steps:
- name: fetch
  image: alpine/git
  environment:
    subgit:
      from_secret: codehost

  commands:
  #- git fetch --tags
  - wget https://nim-lang.org/download/nim-1.6.6-linux_x64.tar.xz 
  - mkdir nim && tar xvf nim-*xz -C ./nim --strip-components 1
  - echo $(echo $DRONE_COMMIT_MESSAGE | sed -En 's/ci\((.+)\):\s.+/\1/gp') > ver
  - git clone $subgit/$(cat ver) out 

- name: build-x64
  image: dockcross/linux-x64
  commands:
  - *coms
  - nimble build --passL:-static -o:out-linux-amd64 -d:release
  - mv $biname $biname-linux-amd64
    
- name: build-linux-arm64
  image: dockcross/linux-arm64
  when:
    ref:
    - refs/tags/nim-arm
  commands:
  - *coms
  - nimble build --cc:env --os:linux --cpu:arm64 -o:out-linux-arm64 -d:release
  - mv $biname $biname-linux-arm64

- name: build-arm64
  image: ghcr.io/tomasky/drones/arm64:nim
  when:
    ref:
    - refs/tags/nim-arm
  commands:
  - *coms
  - nimble build --cc:env --os:android --cpu:arm64 -o:out-android-arm64 -d:release
  - mv $biname $biname-android-arm64


- name: push-coding
  image: node:alpine
  when:
    ref:
    - refs/tags/*
  environment:
    arturl:
      from_secret: arturl
    artcode:
      from_secret: artcode
  commands:
  - npm install coding-generic -g && cd out
  - export biname=$(cat ../ver)
  - export out=$biname.tar.gz
  - tar zcvf $out $biname-*
  - export ver=$(sed -En 's/version\s+=\s"(.+)"$/\1/gp' $biname.nimble)
  - coding-generic -u=$artcode --path=$out --registry="$arturl/$out?version=$ver" 
