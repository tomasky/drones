image: &image rust:latest
coms: &coms curl -LsSf https://sh.rustup.rs | bash -s -- -y && . "$HOME/.cargo/env" && cd out && apt-get update && apt-get install -y   libglib2.0-dev 

anchor: &anchor
  image: node:alpine
  when:
    ref:
    - refs/tags/rs*
  environment:
    arturl:
      from_secret: arturl
    artcode:
      from_secret: artcode
  commands:
  - npm install coding-generic -g
  - cd out &&  export bin=$(sed -En ':a;N;$!ba;s/.+\[\[bin\]\]\nname\s=\s"(\w+[^"]{1})(.+)/\1/gp' Cargo.toml)
  - out=$(echo $DRONE_COMMIT_MESSAGE | sed -En 's/ci\((.+)\):\s.+/\1/gp') export out=${out:-$bin}.tar.gz
  - tar zcvf $out target/**/**/$bin
  - export ver=$(sed -En 's/version\s=\s"(.+)"$/\1/gp' Cargo.toml)
  - coding-generic -u=$artcode --path=$out --registry="$arturl/$out?version=$ver" 


kind: pipeline
name: default
type: docker

clone: 
  disable: true
trigger:
  ref:
    exclude:
    - refs/tags/scn
  event:
    include:
      - push
      - tag
      - promote
image_pull_secrets:
- dockerconfig

steps:
- name: fetch
  image: alpine/git
  environment:
    subgit:
      from_secret: rustgit

  commands:
  #- git fetch --tags
  - git clone https://github.com/bootandy/dust   out

- name: build-linux-amd64
  image: node:slim 
  failure: ignore
  commands:
  - apt update && apt install -y curl  gcc
  - *coms
  - cargo build --bins --release --target x86_64-unknown-linux-gnu

- name: build-android-arm64
  image: ghcr.io/cross-rs/aarch64-linux-android:edge
  failure: ignore
  when:
    ref:
    - refs/tags/rs-arm
  commands:
  - *coms
  - rustup target add aarch64-linux-android
  - cargo build --bins --release --target aarch64-linux-android

- name: build-linux-arm64
  image: ghcr.io/cross-rs/aarch64-unknown-linux-gnu:edge
  failure: ignore
  when:
    ref:
    - refs/tags/rs-arm
  commands:
  - *coms
  - rustup target add aarch64-unknown-linux-gnu
  - cargo build --bins --release --target aarch64-unknown-linux-gnu

    
- <<: *anchor
  name: push-coding





---
kind: pipeline
name: scalan
type: docker
clone: 
  disable: true
 
image_pull_secrets:
- ghdkjson
trigger:
    ref:
    - refs/tags/scn
steps:
- name: fetch
  image: alpine/git
  environment:
    subgit:
      from_secret: scalangit

  commands:
  - git clone $subgit out 
  # - git clone https://github.com/i10416/prettytable-native out

- name: build 
  image: ghcr.io/tomasky/scalandk/image:0.0.1
  commands:
    - cd out && sbt 'set scalaVersion:= "2.13.8"' run

- name: push-coding
  image: node:alpine
  when:
    ref:
    - refs/tags/*
  environment:
    arturl:
      from_secret: arturl
    artcode:
      from_secret: artcode
  commands:
  - npm install coding-generic -g  
  - out=$(echo $DRONE_COMMIT_MESSAGE | sed -En 's/ci\((.+)\):\s.+/\1/gp') export out=${out:-scn}.tar.gz
  - cd out && tar zcvf $out target/scala-*/*-out
  - coding-generic -u=$artcode --path=$out --registry="$arturl/$out?version=$(sed -En 's/version\s:=\s"(.+)"$/\1/gp' build.sbt)" 
